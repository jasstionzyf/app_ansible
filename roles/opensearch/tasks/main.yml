---


- name: Disable swap (if configured).
  become: yes
  tags: ops_config
  command: swapoff -a


- name: Remove swapfile from /etc/fstab
  become: yes
  tags: ops_config
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
      - swap


- name: Set vm.max_map_count in sysctl.conf
  become: yes
  tags: ops_config
  sysctl:
    name: vm.max_map_count
    value: '262144'
    state: present

- name: Set open files limit in sysctl.conf
  become: yes
  tags: ops_config
  sysctl:
    name: fs.file-max
    value: '65536'
    state: present



- name: empty es data, log
  become: yes
  become_user: root
  tags: ops_clean
  shell:  bash -l -c ' nohup rm -rf {{ops_cfg.ops_dataDir}}/* &'
- name: empty es data, log
  become: yes
  become_user: root
  tags: ops_clean
  shell:  bash -l -c ' nohup rm -rf {{ops_cfg.ops_logDir}}/* &'

#
#- name: start app
#  become: yes
#  become_user: zhaoyufei
#
#  shell:  bash -l -c ' nohup {{app_rootDir}}{{appName}}/bin/elasticsearch &'
##  when: as_hadoop_slave
#  tags: es_start
#  async: 30
#  poll: 2
- name: make sure all related folders present, if present do nothing
  become: yes
  become_user: root
  tags: ops_install
  file:
    path: "{{item}}"
    owner: "{{op_user}}"
    group: "{{op_user_group}}"
    mode: u=rwx,g=xr,o=x
    recurse: yes
    state: directory
  loop:
    - "{{ops_cfg.ops_home}}"
    - "{{ops_cfg.ops_cfgDir}}"
    - "{{ops_cfg.ops_dataDir}}"
    - "{{ops_cfg.ops_logDir}}"


- name: upload app and unzip to  remote machine
  become: yes
  become_user: root
  tags: ops_install
  unarchive:
    src: "{{app_libary_dir}}"
    dest: "{{ops_cfg.ops_home}}"
    extra_opts: [--strip-components=1]
#    creates: "{{app_rootDir}}{{appName}}/"
    owner: "{{op_user}}"
    group: "{{op_user_group}}"
    mode: u=rwx,g=xr,o=x
- name: remove remote  config files and bin
  become: yes
  become_user: root
  tags: ops_config
  shell:  bash -l -c ' nohup rm -rf {{ops_cfg.ops_cfgDir}}/* &'
- name: remove remote  config files and bin
  become: yes
  become_user: root
  tags: ops_config
  shell: bash -l -c ' nohup rm -rf {{ops_cfg.ops_home}}/bin/* &'
- name: copy orginal config files to conf folder
  become: yes
  become_user: root
  tags: ops_config
  copy:
    src: templates/{{item.src}}
    dest: "{{item.dest}}"
    owner: "{{ op_user }}"
    group: "{{ op_user_group }}"
    mode: u=rwx,g=xr,o=x
  with_items:
    - { src: 'bin',dest: '{{ops_cfg.ops_home}}/' }
    - { src: 'config/',dest: '{{ops_cfg.ops_cfgDir}}' }





- name: app config files
  template:
    dest: "{{item.dest}}"
    src: templates/{{item.src}}
    mode: u=rw,g=r,o=r
    owner: "{{ op_user }}"
    group: "{{ op_user_group }}"
  become: yes
  become_user: root
  tags: ops_config
  with_items:
        - {src: 'config/opensearch.yml',dest: '{{ops_cfg.ops_cfgDir}}/opensearch.yml'}
        - {src: 'config/jvm.options',dest: '{{ops_cfg.ops_cfgDir}}/jvm.options'}

- name: update execute file
  template:
    dest: "{{item.dest}}"
    src: templates/{{item.src}}
    mode: u=xrw,g=xr,o=xr
    owner: "{{ op_user }}"
    group: "{{ op_user_group }}"
  become: yes
  become_user: root
  tags: ops_config
  with_items:
       - { src: 'bin/opensearch',dest: '{{ops_cfg.ops_home}}/bin/opensearch' }


# opensearch dashboard
- name: make sure all related folders present, if present do nothing
  become: yes
  become_user: root
  tags: ops_dashboard_install
  file:
    path: "{{item}}"
    owner: "{{op_user}}"
    group: "{{op_user_group}}"
    mode: u=rwx,g=xr,o=x
    recurse: yes
    state: directory
  loop:
    - "{{ops_dashboards.home}}"


- name: upload app and unzip to  remote machine
  become: yes
  become_user: root
  tags: ops_dashboard_install
  unarchive:
    src: "{{ops_dashboard_dir}}"
    dest: "{{ops_dashboards.home}}"
    extra_opts: [--strip-components=1]
#    creates: "{{app_rootDir}}{{appName}}/"
    owner: "{{op_user}}"
    group: "{{op_user_group}}"
    mode: u=rwx,g=xr,o=x



- name: app config files
  template:
    dest: "{{ops_dashboards.home}}config/{{item.dest}}"
    src: templates/config/{{item.src}}
    mode: u=rw,g=r,o=r
    owner: "{{ op_user }}"
    group: "{{ op_user_group }}"
  become: yes
  become_user: root
  tags: ops_dashboard_config
  with_items:
        - {src: 'opensearch_dashboards.yml',dest: 'opensearch_dashboards.yml'}



#- name: update plugins